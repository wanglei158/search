{"version":3,"sources":["utils.js","search/index.jsx","App.js","add/index.jsx","sreachHistory/index.jsx","reportWebVitals.js","index.js"],"names":["filterEmpty","data","allowEmptyKeys","Array","rst","Object","keys","forEach","key","value","includes","Search","props","state","condition","author","title","date","pages","journal","number","volume","list","columns","label","prop","align","e","preventDefault","this","setState","assign","obj","para","paramsArray","push","length","ls","JSON","parse","localStorage","getItem","setItem","stringify","join","rest","params","parseDate","parseParams","concatParams","fetch","then","r","json","res","getList","className","model","labelWidth","onSubmit","bind","Row","Col","span","Item","onChange","placeholder","width","call","selectionMode","type","onClick","icon","emptyText","maxHeight","year","getFullYear","month","getMonth","Component","App","Add","code","temp","alert","getAdd","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","i18n","use","locale","Menu","curindex","num","console","log","index","content","style","cursor","marginLeft","color","getswitch","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.22519582.chunk.js","sourcesContent":["export const filterEmpty = (data, allowEmptyKeys) => {\n    if (data) {\n        if (data instanceof Array) {\n            return data\n        }\n        const rst = {}\n        Object.keys(data).forEach(key => {\n            const value = data[key]\n            if (allowEmptyKeys && allowEmptyKeys.includes(key)) {\n                rst[key] = value\n            } else {\n                (value || value === 0 || typeof value === 'boolean') && (rst[key] = value)\n            }\n        })\n        return rst\n    }\n}","import { Component } from 'react'\nimport { Form, Input, Layout, DatePicker, Table, Button } from 'element-react'\nimport './index.css'\nimport {filterEmpty} from '../utils'\n\nexport default class Search extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            condition: {\n                author: '',\n                title: '',\n                date: null,\n                pages: '',\n                journal: '',\n                number: '',\n                volume: ''\n            },\n            list: [],\n            columns: [\n                {\n                    label: 'author',\n                    prop: 'author',\n                    align: 'center'\n                },\n                {\n                    label: 'title',\n                    align: 'center',\n                    prop: 'title'\n                },\n                {\n                    label: 'journal',\n                    align: 'center',\n                    prop: 'journal'\n                },\n                {\n                    label: 'volume',\n                    align: 'center',\n                    prop: 'volume'\n                },\n                {\n                    label: 'number',\n                    align: 'center',\n                    prop: 'number'\n                },\n                {\n                    label: 'pages',\n                    align: 'center',\n                    prop: 'pages'\n                },\n                {\n                    label: 'year',\n                    align: 'center',\n                    prop: 'year'\n                },\n                {\n                    label: 'month',\n                    align: 'center',\n                    prop: 'month'\n                }\n            ]\n        }\n    }\n\n    get parseDate() {\n        const { condition: { date } } = this.state\n        if(!date) return {}\n        return {\n            year: date.getFullYear(),\n            month: date.getMonth() +1\n        }\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n    }\n\n    onChange(key, value) {\n        this.setState({\n            condition: Object.assign({}, this.state.condition, {[key]: value})\n        })\n    }\n    concatParams(obj) {\n        const para = filterEmpty(obj)\n        let paramsArray = []; \n        let keys = Object.keys(para)\n        keys.forEach(key => paramsArray.push(key + '=' + para[key]))\n        if (keys.length > 0) {\n            const ls = JSON.parse(localStorage.getItem('his')) || []\n            ls.push(obj)\n            localStorage.setItem('his', JSON.stringify(ls));\n        }\n        return paramsArray.join('&')\n    }\n    getList() {\n        const { date, ...rest } = this.state.condition\n        const params = Object.assign(this.parseDate, rest)\n        let parseParams = this.concatParams(params)\n\n        fetch('/search?' + parseParams).then(r => {\n            return r.json()\n        }).then(res => {\n            this.setState({\n                list: res\n            })\n        })\n    }\n\n    componentDidMount() {\n        this.getList()\n    }\n\n    render() {\n        const { condition, list, columns } = this.state;\n        return (\n            <div>\n            <Form className=\"search\" model={condition} labelWidth=\"80\" onSubmit={this.onSubmit.bind(this)}>\n                <Layout.Row>\n                    <Layout.Col span=\"6\">\n                        <Form.Item label=\"author\">\n                            <Input value={condition.author} onChange={this.onChange.bind(this, 'author')}></Input>\n                        </Form.Item>\n                    </Layout.Col>\n                    <Layout.Col span=\"6\">\n                        <Form.Item label=\"title\">\n                            <Input value={condition.title} onChange={this.onChange.bind(this, 'title')}></Input>\n                        </Form.Item>\n                    </Layout.Col>\n                    <Layout.Col span=\"6\">\n                        <Form.Item label=\"journal\">\n                            <Input value={condition.journal} onChange={this.onChange.bind(this, 'journal')}></Input>\n                        </Form.Item>\n                    </Layout.Col>\n                    <Layout.Col span=\"6\">\n                        <Form.Item label=\"volume\">\n                            <Input value={condition.volume} onChange={this.onChange.bind(this, 'volume')}></Input>\n                        </Form.Item>\n                    </Layout.Col>\n                    <Layout.Col span=\"6\">\n                        <Form.Item label=\"pages\">\n                            <Input value={condition.pages} onChange={this.onChange.bind(this, 'pages')}></Input>\n                        </Form.Item>\n                    </Layout.Col>\n                    <Layout.Col span=\"6\">\n                        <Form.Item label=\"number\">\n                            <Input value={condition.number} onChange={this.onChange.bind(this, 'number')}></Input>\n                        </Form.Item>\n                    </Layout.Col>\n                    <Layout.Col span=\"6\">\n                        <Form.Item label=\"date\">\n                            <DatePicker\n                                value={condition.date}\n                                placeholder=\"select month\"\n                                width=\"100%\"\n                                onChange={date => this.onChange.call(this, 'date', date)}\n                                selectionMode=\"month\"\n                            />\n                        </Form.Item>\n                    </Layout.Col>\n                    <Layout.Col span=\"6\">\n                        <Form.Item label=\"\">\n                            <Button type=\"primary\" onClick={this.getList.bind(this)} icon=\"search\">search</Button>\n                        </Form.Item>\n                    </Layout.Col>\n                </Layout.Row>\n                </Form>\n                <Table emptyText={'Empty'} data={list} columns={columns} maxHeight={400}>\n\n                </Table>\n            </div>\n        )\n    }\n}","\nimport './App.css';\nimport Search from './search/index.jsx'\nimport 'element-theme-default';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Search />\n    </div>\n  );\n}\n\nexport default App;\n","import { Component } from 'react'\nimport { Form, Input, Layout, DatePicker, Button } from 'element-react'\nimport {filterEmpty} from '../utils'\n\nexport default class Add extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            condition: {\n                author: '',\n                title: '',\n                date: null,\n                pages: '',\n                journal: '',\n                number: '',\n                volume: ''\n            }\n        }\n    }\n\n    get parseDate() {\n        const { condition: { date } } = this.state\n        if(!date) return {}\n        return {\n            year: date.getFullYear(),\n            month: date.getMonth() +1\n        }\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n    }\n\n    onChange(key, value) {\n        this.setState({\n            condition: Object.assign({}, this.state.condition, {[key]: value})\n        })\n    }\n    concatParams(obj) {\n        const para = filterEmpty(obj)\n        let paramsArray = []; \n        Object.keys(para).forEach(key => paramsArray.push(key + '=' + para[key]))\n        return paramsArray.join('&')\n    }\n    getAdd() {\n        const { date, ...rest } = this.state.condition\n        const params = Object.assign(this.parseDate, rest)\n        let parseParams = this.concatParams(params)\n\n        fetch('/add?' + parseParams).then(r => {\n            return r.json()\n        }).then(res => {\n            if (res.code === 1) {\n                const { condition} = this.state\n                let temp = {};\n                Object.keys(condition).forEach(key => {\n                    temp[key] = ''\n                })\n                this.setState({\n                    condition: temp\n                })\n                alert('新增成功')\n            }\n        })\n    }\n\n    render() {\n        const { condition } = this.state;\n        return (\n            <div>\n            <Form className=\"search\" model={condition} labelWidth=\"80\" onSubmit={this.onSubmit.bind(this)}>\n                <Layout.Row>\n                    <Layout.Col span=\"6\">\n                        <Form.Item label=\"author\">\n                            <Input value={condition.author} onChange={this.onChange.bind(this, 'author')}></Input>\n                        </Form.Item>\n                    </Layout.Col>\n                    <Layout.Col span=\"6\">\n                        <Form.Item label=\"title\">\n                            <Input value={condition.title} onChange={this.onChange.bind(this, 'title')}></Input>\n                        </Form.Item>\n                    </Layout.Col>\n                    <Layout.Col span=\"6\">\n                        <Form.Item label=\"journal\">\n                            <Input value={condition.journal} onChange={this.onChange.bind(this, 'journal')}></Input>\n                        </Form.Item>\n                    </Layout.Col>\n                    <Layout.Col span=\"6\">\n                        <Form.Item label=\"volume\">\n                            <Input value={condition.volume} onChange={this.onChange.bind(this, 'volume')}></Input>\n                        </Form.Item>\n                    </Layout.Col>\n                    <Layout.Col span=\"6\">\n                        <Form.Item label=\"pages\">\n                            <Input value={condition.pages} onChange={this.onChange.bind(this, 'pages')}></Input>\n                        </Form.Item>\n                    </Layout.Col>\n                    <Layout.Col span=\"6\">\n                        <Form.Item label=\"number\">\n                            <Input value={condition.number} onChange={this.onChange.bind(this, 'number')}></Input>\n                        </Form.Item>\n                    </Layout.Col>\n                    <Layout.Col span=\"6\">\n                        <Form.Item label=\"date\">\n                            <DatePicker\n                                value={condition.date}\n                                placeholder=\"select month\"\n                                width=\"100%\"\n                                onChange={date => this.onChange.call(this, 'date', date)}\n                                selectionMode=\"month\"\n                            />\n                        </Form.Item>\n                    </Layout.Col>\n                    <Layout.Col span=\"6\">\n                        <Form.Item label=\"\">\n                            <Button type=\"primary\" onClick={this.getAdd.bind(this)} icon=\"upload\">submit</Button>\n                        </Form.Item>\n                    </Layout.Col>\n                </Layout.Row>\n                </Form>\n            </div>\n        )\n    }\n}","import { Component } from 'react'\nimport { Table } from 'element-react'\nimport {filterEmpty} from '../utils'\n\nexport default class Add extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            columns: [\n                {\n                    label: 'author',\n                    prop: 'author',\n                    align: 'center'\n                },\n                {\n                    label: 'title',\n                    align: 'center',\n                    prop: 'title'\n                },\n                {\n                    label: 'journal',\n                    align: 'center',\n                    prop: 'journal'\n                },\n                {\n                    label: 'volume',\n                    align: 'center',\n                    prop: 'volume'\n                },\n                {\n                    label: 'number',\n                    align: 'center',\n                    prop: 'number'\n                },\n                {\n                    label: 'pages',\n                    align: 'center',\n                    prop: 'pages'\n                },\n                {\n                    label: 'year',\n                    align: 'center',\n                    prop: 'year'\n                },\n                {\n                    label: 'month',\n                    align: 'center',\n                    prop: 'month'\n                }\n            ]\n        }\n    }\n\n    render() {\n        let list = JSON.parse(localStorage.getItem('his')) || [];\n        const { columns } = this.state;\n        return (\n            <div>\n                <h3>搜索历史</h3>\n                <Table emptyText={'Empty'} data={list} columns={columns} maxHeight={400}>\n\n                </Table>\n            </div>\n        )\n    }\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Add from './add/index.jsx'\nimport His from './sreachHistory/index'\nimport reportWebVitals from './reportWebVitals';\nimport { i18n } from 'element-react'\nimport locale from 'element-react/src/locale/lang/en'\n\nimport { Router, Route, BrowserRouter, Link, Switch } from 'react-router-dom';\n\nimport { createHashHistory } from 'history'\n\ni18n.use(locale);\n\nclass Menu extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      curindex: 1\n    }\n  }\n  getswitch(num) {\n    this.setState({\n      curindex: num\n    })\n    console.log(num)\n  }\n  render() {\n    const index = this.state.curindex;\n    let content = null;\n    if (index === 1) {\n      content = <App />\n    }\n    if (index === 2) {\n      content = <Add />\n    }\n    if (index === 3) {\n      content = <His />\n    }\n    return (<div>\n      <span style={{ cursor: \"pointer\", marginLeft: '24px', color: \"blue\" }} onClick={this.getswitch.bind(this, 1)}>list</span>\n      <span style={{ cursor: \"pointer\", marginLeft: '24px', color: \"blue\" }} onClick={this.getswitch.bind(this, 2)}>add</span>\n      <span style={{ cursor: \"pointer\", marginLeft: '24px', color: \"blue\" }} onClick={this.getswitch.bind(this, 3)}>search hostory</span>\n      {\n        content\n      }\n    </div>)\n  }\n}\n\n\nReactDOM.render(\n  <Menu />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}